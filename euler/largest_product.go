package main
import (
     "fmt"
     "strings"
     "strconv"
)
func main() {
    number := ``

    product := int64(1)
    temp_product := int64(1)
    for i := 0; i <= len(number)-13; i++ {
       if !strings.Contains(number[i:i+13], "0") {
           fmt.Println(number[i:i+13]) 
            temp := findProduct(number[i:i+13])
            if product < temp {
                 product = temp
            }
            if temp_product < product {
                temp_product = product
            }
       }
    }
    fmt.Println()
    if temp_product > product {
         fmt.Println("Largest prod ",temp_product)
    } else {
         fmt.Println("Largest prod ",product)
    }
}

func findProduct(number string) int64{
     product := int64(1)
     for _, num := range number {
         i, _ := strconv.ParseInt(string(num), 10, 64)
         product = product * i
     }
     return product
}
